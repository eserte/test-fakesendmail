#!/usr/bin/perl -w
# -*- perl -*-

#
# Author: Slaven Rezic
#
# Copyright (C) 2014 Slaven Rezic. All rights reserved.
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl itself.
#
# Mail: slaven@rezic.de
# WWW:  http://www.rezic.de/eserte/
#

use strict;
use vars qw($VERSION);
$VERSION = '0.01';

use Getopt::Long;
use POSIX qw(strftime);

my $env_var = 'PERL_TEST_FAKESENDMAIL_DIRECTORY';

my $mail_directory; # this line may be replaced!

my $dummy;
my $show_queue;
GetOptions(
	   "t" => \$dummy,
	   "oi" => \$dummy,
	   "oem" => \$dummy,
	   "tfsm-info" => sub {
	       info();
	       exit 0;
	   },
	   "tfsm-queue" => \$show_queue,
	  )
    or die "ERROR: unhandled test-fake-sendmail option";

if (!defined $mail_directory) {
    if (!$ENV{$env_var}) {
	die <<EOF;
ERROR: The environment variable $env_var is not set,
       don't know where to store mail files
EOF
    }
    $mail_directory = $ENV{$env_var};
}

if ($show_queue) {
    queue(); # exits
}

if (!-d $mail_directory) {
    # don't use mkpath here
    mkdir $mail_directory;
    my $err = $!;
    if (!-d $mail_directory) {
	die "ERROR: Cannot mkdir $mail_directory: $err";
    }
}

if (!-w $mail_directory) {
    die "ERROR: Cannot write to directory $mail_directory";
}

chdir $mail_directory
    or die "ERROR: Can't chdir to $mail_directory: $!";

my $now = strftime("%Y%m%d_%H%M%S.$$", gmtime);

{
    open my $content_fh, ">", "$now.content"
	or die "ERROR: Can't write to $now.content: $!";
    # XXX binmode?
    while(<STDIN>) {
	print $content_fh $_;
    }
    close $content_fh
	or die "ERROR: Failure while writing to $now.content: $!";
}

{
    open my $info_fh, ">", "$now.info"
	or die "ERROR: Can't write to $now.info: $!";
    # XXX binmode?
    print $info_fh "received=" . strftime("%FT%TZ", gmtime) . "\n";
    close $info_fh
	or die "ERROR: Failure while writing to $now.info: $!";
}

sub info {
    print "test-fake-sendmail $VERSION\n";
    if (defined $mail_directory) {
	print "mail_directory: $mail_directory\n";
    } else {
	print "mail_directory: <undef>\n";
	print "(please set the environment variable $env_var)\n";
    }
}

sub queue {
    if (!-d $mail_directory) {
	print "Mail directory '$mail_directory' does not exist";
	exit 1;
    } else {
	if (!chdir $mail_directory) {
	    print "Cannot chdir to mail directory '$mail_directory': $!";
	    exit 1;
	} else {
	    print "Contents of mail directory '$mail_directory':\n";
	    # chdir now adjusted
	    opendir my $dirh, ".";
	    while(defined(my $entry = readdir $dirh)) {
		next if $entry eq '.' || $entry eq '..';
		print $entry, "\n";
	    }
	    exit 0;
	}
    }
}

__END__
